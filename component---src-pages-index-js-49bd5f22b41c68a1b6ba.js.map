{"version":3,"sources":["webpack:///./src/images/background/aristo-hp.jpg","webpack:///./src/pages/index.js"],"names":["module","exports","HomePageGlobalStyles","createGlobalStyle","colors","brand","homepageBgSrc","StyledHero","styled","header","Home","useTranslations","content","data","pageContext","hero","title","text","to","cta","src","label","className","statement","fullStatement","statements","map","index","key","variant","reversed","Object","values","services","service","path","style","width","cardImagePath","blurb","showArrow","testimonials","testimonial","author","endHero"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,yD,mbCiBpC,IAAMC,EAAuBC,YAAH,IAEfC,IAAOC,MAAaC,KAMhCC,EAAaC,IAAOC,OAAV,wEAAGD,CAAH,oKAKLJ,IAAOC,OAyFHK,UA5EF,WACDC,4BAAV,IACMC,EAAUC,EAAKD,QAErB,OACE,oCACE,kBAACV,EAAD,MACA,kBAAC,IAAD,CAAQY,YAAaD,GACnB,kBAAC,IAAD,KACE,kBAACN,EAAD,KACE,4BAAKK,EAAQG,KAAKC,OAClB,2BAAIJ,EAAQG,KAAKE,MACjB,kBAAC,IAAD,CAAQC,GAAIN,EAAQG,KAAKI,IAAIC,KAAMR,EAAQG,KAAKI,IAAIE,SAGxD,kBAAC,IAAD,KACE,yBAAKC,UAAU,aACb,4BAAKV,EAAQW,UAAUP,OACvB,2BAAIJ,EAAQW,UAAUN,OAExB,yBAAKK,UAAU,kBACZV,EAAQY,cAAcC,WAAWC,KAAI,SAACH,EAAWI,GAAZ,OACpC,yBAAKC,IAAKD,GACR,4BAAKJ,EAAUP,OACf,2BAAIO,EAAUN,MACbM,EAAUJ,KACT,kBAAC,IAAD,CAAQD,GAAIK,EAAUJ,IAAIC,IAAKS,QAAQ,UAAUC,UAAQ,GACtDP,EAAUJ,IAAIE,aAO3B,kBAAC,IAAD,KACE,yBAAKC,UAAU,YACZS,OAAOC,OAAOC,EAASpB,MAAMa,KAAI,SAAAQ,GAChC,OACE,yBAAKN,IAAKM,EAAQC,MAChB,yBAAKC,MAAO,CAAEC,MAAM,UAClB,kBAAC,IAAD,CAAOjB,IAAKc,EAAQI,iBAEtB,4BAAKJ,EAAQlB,OACb,2BAAIkB,EAAQK,OACZ,kBAAC,IAAD,CAAQrB,GAAIgB,EAAQC,KAAMN,QAAQ,OAAOC,UAAQ,EAACU,WAAS,GAA3D,oBAQV,kBAAC,IAAD,KACE,yBAAKlB,UAAU,gBACZmB,EAAa5B,KAAKa,KAAI,SAACgB,EAAaf,GAAd,OACrB,yBAAKC,IAAKD,GACR,2BAAIe,EAAYzB,MAChB,4BAAKyB,EAAYC,cAKzB,kBAAC,IAAD,KACE,yBAAKrB,UAAU,YACb,4BAAKV,EAAQgC,QAAQ5B,OACrB,2BAAIJ,EAAQgC,QAAQ3B,MACpB,kBAAC,IAAD,CAAQC,GAAIN,EAAQgC,QAAQzB,IAAIC,IAAKU,UAAQ,GAC1ClB,EAAQgC,QAAQzB,IAAIE,a","file":"component---src-pages-index-js-49bd5f22b41c68a1b6ba.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/aristo-hp-0cbec8a0edb302a076374b99f733e0aa.jpg\";","import React from \"react\"\n// import { useIntl } from \"gatsby-plugin-intl\";\nimport { useTranslations } from \"gatsby-plugin-translate\"\n\n// Components\nimport { Image, Layout, Button, Container, Statement } from \"../components\"\n\n// Data\nimport data from \"../data/pages/home.json\"\nimport testimonials from \"../data/testimonials.json\"\nimport services from \"../data/services.json\"\n\n// Styles\nimport styled, { createGlobalStyle } from \"styled-components\"\nimport { colors } from \"../constants/theme\"\nimport homepageBgSrc from \"../images/background/aristo-hp.jpg\"\n\nexport const HomePageGlobalStyles = createGlobalStyle`\n  body {\n    background: ${colors.brand} url(${homepageBgSrc}) top center/contain no-repeat;\n    background-position-y: 120px;\n    color: #fff;\n  }\n`\n\nconst StyledHero = styled.header`\n  padding: 4rem 0;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: 4rem;\n  color: ${colors.brand};\n\n  h1 {\n    font-size: 56px;\n    line-height: 1.3;\n  }\n  p {\n    font-size: 18px;\n    line-height: 2;\n    margin: 1.5rem 0;\n  }\n`\n\nconst Home = () => {\n  const t = useTranslations() //useIntl().formatMessage;\n  const content = data.content\n\n  return (\n    <>\n      <HomePageGlobalStyles />\n      <Layout pageContext={data}>\n        <Container>\n          <StyledHero>\n            <h1>{content.hero.title}</h1>\n            <p>{content.hero.text}</p>\n            <Button to={content.hero.cta.src}>{content.hero.cta.label}</Button>\n          </StyledHero>\n        </Container>\n        <Container>\n          <div className=\"statement\">\n            <h2>{content.statement.title}</h2>\n            <p>{content.statement.text}</p>\n          </div>\n          <div className=\"full-statement\">\n            {content.fullStatement.statements.map((statement, index) => (\n              <div key={index}>\n                <h3>{statement.title}</h3>\n                <p>{statement.text}</p>\n                {statement.cta && (\n                  <Button to={statement.cta.src} variant=\"outline\" reversed>\n                    {statement.cta.label}\n                  </Button>\n                )}\n              </div>\n            ))}\n          </div>\n        </Container>\n        <Container>\n          <div className=\"services\">\n            {Object.values(services.data).map(service => {\n              return (\n                <div key={service.path}>\n                  <div style={{ width: `250px` }}>\n                    <Image src={service.cardImagePath} />\n                  </div>\n                  <h3>{service.title}</h3>\n                  <p>{service.blurb}</p>\n                  <Button to={service.path} variant=\"link\" reversed showArrow>\n                    Learn More\n                  </Button>\n                </div>\n              )\n            })}\n          </div>\n        </Container>\n        <Container>\n          <div className=\"testimonials\">\n            {testimonials.data.map((testimonial, index) => (\n              <div key={index}>\n                <p>{testimonial.text}</p>\n                <h3>{testimonial.author}</h3>\n              </div>\n            ))}\n          </div>\n        </Container>\n        <Container>\n          <div className=\"end-hero\">\n            <h2>{content.endHero.title}</h2>\n            <p>{content.endHero.text}</p>\n            <Button to={content.endHero.cta.src} reversed>\n              {content.endHero.cta.label}\n            </Button>\n          </div>\n        </Container>\n      </Layout>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}